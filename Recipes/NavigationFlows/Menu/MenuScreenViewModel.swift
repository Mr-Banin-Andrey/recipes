//
//  MenuScreenViewModel.swift
//  Recipes
//
//  Created by –ê–Ω–¥—Ä–µ–π –ë–∞–Ω–∏–Ω on 14.03.2025.
//

import SwiftUI
import Combine
import SwiftData


final class MenuScreenViewModel: ObservableObject {
    
    //MARK: Global Dependency
    @Dependency var stateKeeper: StateKeeper
    @Dependency var database: SwiftDataService
    
    //day
    @Published var id: String = UUID().uuidString
    @Published var date: Date = Date.nowToday
    
    @Published var mealTime: [DiningTime] = DiningTime.mockArray
    @Published var mealTimeForSave: [DiningTime] = []
    
    //all recipe & day in model
    @Published var recipes: [Recipe] = []
//    @Published var dishListForSelectedDay: DishList = DishList.mock
    
    private var cancellables: Set<AnyCancellable> = []
    
    //MARK: Initial
    
    @MainActor
    init() {
        stateKeeper.$recipes
            .sink { recipes in
                self.recipes = recipes
            }
            .store(in: &cancellables)
                
//        $dishListForSelectedDay
//            .sink { value in
//                //TODO: –æ—Ç—Ä–µ—Ñ–∞—á–∏—Ç—å, –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
//                if let index = self.stateKeeper.dishLists.firstIndex(where: { $0.id == value.id }) {
//                    self.stateKeeper.dishLists[index] = value
//                    self.database.saveData(value)
////                    print("üê∏",value.date, value.id, value.mealTime)
//////                    value.mealTime.forEach { print($0.mealTimeType) }
//                } else {
//                    self.stateKeeper.dishLists.append(value)
//                    self.database.saveData(value)
//                }
//            }
//            .store(in: &cancellables)
        
//        stateKeeper.$dishLists
//            .sink { dishLists in
//                print(" stateKeepe dishLists.count üíô \(dishLists.count)")
//                print(" stateKeeper.$dishLists üíô1")
//                if let index = dishLists.firstIndex(where: { $0.date == self.date }) {
//                    print(" stateKeeper.$dishLists üíô2")
//                    let dishList = dishLists[index]
//                    print(" stateKeeper.$dishLists üíô3")
//                    self.id = dishLists[index].id
//                    print(" stateKeeper.$dishLists üíô4")
//                    dishList.mealTime.forEach { meal in
//                        print(" stateKeeper.$dishLists üíô5")
//                        if let mealTimeIndex = self.mealTime.firstIndex(where: { $0.mealTimeType == meal.mealTimeType }) {
//                            print(" stateKeeper.$dishLists üíô6")
//                            self.mealTime[mealTimeIndex].recipe = meal.recipe
//                            print(" stateKeeper.$dishLists üíô7")
//                        }
//                    }
//                }
//                print("stateKeeper.$dishLists üíô-------------------------------")
//            }
//            .store(in: &cancellables)
        
        $mealTime
            .map { $0 }
            .sink { mealTime in
                
//                if !self.stateKeeper.dishLists.filter({ $0.date == self.date }).isEmpty {
//
//                }
//                print("$mealTime üê∏1")
//                //—Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã–º —Ä–µ—Ü–µ–ø—Ç–∞–º
//                let filledRecipe = mealTime.filter { $0.recipe.name != "" }
//                print("$mealTime üê∏2")
//                
//                
//                //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ—Ü–µ–ø—Ç—ã –Ω–∞ –¥–µ–Ω—å
//                let dishList = DishList(id: self.id, date: self.date, mealTime: filledRecipe)
//                print("$mealTime üê∏3")
//                
//                
//                //–¥–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤ –∏ –±–∞–∑—É
//                if let index = self.stateKeeper.dishLists.firstIndex(where: { $0.id == self.id }) {
//                    print("$mealTime üê∏4")
//                    self.stateKeeper.dishLists[index] = dishList
//                } else {
//                    print("$mealTime üê∏5")
//                    self.stateKeeper.dishLists.append(dishList)
//                }
//                print("$mealTime üê∏6")
//                self.database.saveData(dishList)
//                print("$mealTime üê∏-------------------------------")
            }
            .store(in: &cancellables)
    }
   
    
    func currentDate() {
        let date = Date()
        var calendar = Calendar.current
        calendar.timeZone = .current
        let dateComponents = calendar.dateComponents([.year, .month, .day], from: date)
        if let dateOnly = calendar.date(from: dateComponents) {
            print(dateOnly)
        }
    }
    
    func downloadDataForSelectedDay(date: Date) {
//        if let index = stateKeeper.dishLists.firstIndex(where: { $0.date == date }) {
//            dishListForSelectedDay = stateKeeper.dishLists[index]
//        }
//        else {
//            //TODO: –¥–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å —Å –ø—Ä–∏–µ–º–∞–º–∏ –ø–∏—â–∏
//        }
    }
    
    //TODO: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ TheDishList –≤ –º–∞—Å—Å–∏–≤ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –¥–∞—Ç—É
    //–µ—Å–ª–∏ –Ω–µ—Ç –¥–∞—Ç—ã, —Å–æ–∑–¥–∞—Ç—å, –µ—Å—Ç—å –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å (–ø–µ—Ä–µ–π—Ç–∏)
    func addMealTime(_ mealTimeType: MealTimeType) {}
}

extension Date {
    static let nowToday: Date = Date(timeIntervalSince1970: 1741986001)
}
